basePath: /api
definitions:
  main.Animal:
    properties:
      _id:
        type: string
      animal_name:
        type: string
      birthdate:
        type: string
      location:
        $ref: '#/definitions/main.Point'
      species:
        type: string
    type: object
  main.Category:
    properties:
      _id:
        type: string
      category_name:
        type: string
    type: object
  main.CategoryUpdateRequest:
    properties:
      category_name:
        type: string
    type: object
  main.Point:
    properties:
      coordinates:
        items:
          type: number
        type: array
      type:
        type: string
    type: object
  main.Response:
    properties:
      error:
        type: string
      message:
        type: string
      success:
        type: boolean
    type: object
  main.Species:
    properties:
      _id:
        type: string
      category:
        type: string
      image:
        type: string
      location:
        $ref: '#/definitions/main.Point'
      species_name:
        type: string
    type: object
host: localhost:5000
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server for a Go REST API.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Go REST API
  version: "1.0"
paths:
  /animals:
    get:
      consumes:
      - application/json
      description: Get all animals with filtering, sorting, and pagination
      parameters:
      - description: Animal Name
        in: query
        name: animal_name
        type: string
      - description: Species Name
        in: query
        name: species_name
        type: string
      - description: Category Name
        in: query
        name: category_name
        type: string
      - description: Sort By
        in: query
        name: sort_by
        type: string
      - description: Sort Order
        in: query
        name: sort_order
        type: string
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Skip
        in: query
        name: skip
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Animal'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.Response'
      summary: Get all animals
      tags:
      - animals
    post:
      consumes:
      - application/json
      description: Create a new animal
      parameters:
      - description: Animal
        in: body
        name: animal
        required: true
        schema:
          $ref: '#/definitions/main.Animal'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/main.Animal'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.Response'
      summary: Create an animal
      tags:
      - animals
  /animals/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an animal by ID
      parameters:
      - description: Animal ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.Response'
      summary: Delete an animal
      tags:
      - animals
    get:
      consumes:
      - application/json
      description: Get an animal by ID
      parameters:
      - description: Animal ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Animal'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.Response'
      summary: Get an animal by ID
      tags:
      - animals
    patch:
      consumes:
      - application/json
      description: Update an existing animal
      parameters:
      - description: Animal ID
        in: path
        name: id
        required: true
        type: string
      - description: Animal
        in: body
        name: animal
        required: true
        schema:
          $ref: '#/definitions/main.Animal'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.Response'
      summary: Update an animal
      tags:
      - animals
  /categories:
    get:
      consumes:
      - application/json
      description: Get all categories with filtering, sorting, and pagination
      parameters:
      - description: Category Name
        in: query
        name: category_name
        type: string
      - description: Sort By
        in: query
        name: sort_by
        type: string
      - description: Sort Order
        in: query
        name: sort_order
        type: string
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Skip
        in: query
        name: skip
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Category'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.Response'
      summary: Get all categories
      tags:
      - categories
    post:
      consumes:
      - application/json
      description: Create a new category
      parameters:
      - description: Category
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/main.Category'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/main.Category'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.Response'
      summary: Create a new category
      tags:
      - categories
  /categories/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a category by ID
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.Response'
      summary: Delete a category
      tags:
      - categories
    get:
      consumes:
      - application/json
      description: Get a category by its ID
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Category'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/main.Response'
      summary: Get a category by ID
      tags:
      - categories
    patch:
      consumes:
      - application/json
      description: Update a category by ID
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: string
      - description: Category Data
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/main.CategoryUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.Response'
      summary: Update a category
      tags:
      - categories
  /species:
    get:
      consumes:
      - application/json
      description: Get all species with filtering, sorting, and pagination
      parameters:
      - description: Species Name
        in: query
        name: species_name
        type: string
      - description: Category ID
        in: query
        name: category_id
        type: string
      - description: Sort By
        in: query
        name: sort_by
        type: string
      - description: Sort Order
        in: query
        name: sort_order
        type: string
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Skip
        in: query
        name: skip
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Species'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.Response'
      summary: Get all species
      tags:
      - species
    post:
      consumes:
      - application/json
      description: Create a new species
      parameters:
      - description: Species
        in: body
        name: species
        required: true
        schema:
          $ref: '#/definitions/main.Species'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/main.Species'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.Response'
      summary: Create a new species
      tags:
      - species
  /species/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a species by its ID
      parameters:
      - description: Species ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/main.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.Response'
      summary: Delete a species
      tags:
      - species
    get:
      consumes:
      - application/json
      description: Get a species by its ID
      parameters:
      - description: Species ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Species'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/main.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.Response'
      summary: Get a species by ID
      tags:
      - species
    patch:
      consumes:
      - application/json
      description: Update a species by its ID
      parameters:
      - description: Species ID
        in: path
        name: id
        required: true
        type: string
      - description: Species
        in: body
        name: species
        required: true
        schema:
          $ref: '#/definitions/main.Species'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/main.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.Response'
      summary: Update a species
      tags:
      - species
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
